name: release

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14.x
      - name: Run tests
        run: go test -cover ./...

  goreleaser:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14.x

      - name: Prepare
        id: prepare
        run: |
            TAG=${GITHUB_REF#refs/tags/}
            echo ::set-output name=tag_name::${TAG}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist --timeout=1h
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.prepare.outputs.tag_name }}

  docker:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prepare
        run: |
            TAG=${GITHUB_REF#refs/tags/}
            echo ::set-output name=tag_name::${TAG}

      - name: set up buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest
      
      - name: login to dockerhub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: build (and publish) main image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            --build-arg VERSION=${{ steps.prepare.outputs.tag_name }} \
            --push \
            -t fopina/rgrweb:${{ steps.prepare.outputs.tag_name }} \
            -t fopina/rgrweb:latest \
            -f Dockerfile \
            .

  docker-dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: set up buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest
      
      - name: login to dockerhub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: build (and publish) main image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            --build-arg VERSION=dev \
            --push \
            -t fopina/rgrweb:dev \
            -f Dockerfile \
            .
