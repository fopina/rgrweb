name: release

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.x
      - name: Run go:generate
        run: go generate ./...
      - name: Run tests
        run: go test -cover ./...

  goreleaser:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.x

      - name: Run go:generate
        run: go generate ./...

      - name: Prepare
        id: prepare
        run: echo tag_name=${GITHUB_REF#refs/tags/} >> $GITHUB_OUTPUT

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist --timeout=1h
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.prepare.outputs.tag_name }}

  docker:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare
        id: prepare
        run: echo tag_name=${GITHUB_REF#refs/tags/} >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      
      - name: login to dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push main image
        uses: docker/build-push-action@v3
        with:
          push: true
          platforms: |
            linux/amd64
            linux/arm64
            linux/arm/v7
          build-args: |
            VERSION=${{ steps.prepare.outputs.tag_name }}
          tags: |
            fopina/rgrweb:${{ steps.prepare.outputs.tag_name }}
            fopina/rgrweb:latest

  docker-dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      
      - name: login to dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push main image
        uses: docker/build-push-action@v3
        with:
          push: true
          platforms: |
            linux/amd64
            linux/arm64
            linux/arm/v7
          build-args: |
            VERSION=dev
          tags: |
            fopina/rgrweb:dev
